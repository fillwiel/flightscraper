services:
  broker:
    image: bitnami/kafka:3.4
    hostname: kafka_b
    ports:
      - "9092:9092"  # Internal Kafka listener
      - "9094:9094"  # External Kafka listener
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker:29092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

  flightpublisher:
    build: ./flight-publisher
    container_name: flightpublisher
    depends_on:
      - broker
    ports:
      - "8181:8080"
    environment:
      SPRING_PROFILES_ACTIVE: 'dev'
      FLIGHTSCRAPER_KAFKA_TOPIC: 'flights.published'
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'broker:29092'

  flightpersistence:
    build: ./flight-persistence
    container_name: flightpersistence
    depends_on:
      - broker
    ports:
      - "8282:8080"
    environment:
      SPRING_PROFILES_ACTIVE: 'dev'
      FLIGHTSCRAPER_KAFKA_TOPIC: 'flights.published'
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'broker:29092'

  notification:
    build: ./notification
    container_name: notification
    depends_on:
      - broker
    ports:
      - "8383:8080"
    environment:
      SPRING_PROFILES_ACTIVE: 'dev'
      FLIGHTSCRAPER_KAFKA_TOPIC: 'flights.published'
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'broker:29092'

  subscriptionpersistence:
    build: ./subscription-persistence
    container_name: subscriptionpersistence
    ports:
      - "8484:8080"
    environment:
      SPRING_PROFILES_ACTIVE: 'dev'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor
      - flightpersistence
      - flightpublisher
      - notification
      - subscriptionpersistence
      - broker

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - flightpersistence
      - flightpublisher
      - notification
      - subscriptionpersistence
      - broker
    privileged: true

volumes:
  kafka_data:
    driver: local